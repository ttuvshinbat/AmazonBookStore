{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\n\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pointerEvents: 'auto'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isCurrentlyMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"isClosing\", new Animated.Value(FALSE));\n\n    _defineProperty(_assertThisInitialized(_this), \"inverted\", new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));\n\n    _defineProperty(_assertThisInitialized(_this), \"layout\", {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSwiping\", new Animated.Value(FALSE));\n\n    _defineProperty(_assertThisInitialized(_this), \"interactionHandle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pendingGestureCallback\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastToValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n          velocity = _ref.velocity;\n      var _this$props = _this.props,\n          gesture = _this$props.gesture,\n          transitionSpec = _this$props.transitionSpec,\n          onOpen = _this$props.onOpen,\n          onClose = _this$props.onClose,\n          onTransition = _this$props.onTransition;\n\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n\n      _this.lastToValue = toValue;\n\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n      _this.setPointerEventsEnabled(!closing);\n\n      _this.handleStartInteraction();\n\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        _this.handleEndInteraction();\n\n        clearTimeout(_this.pendingGestureCallback);\n\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n          layout = _ref3.layout,\n          gestureDirection = _ref3.gestureDirection;\n\n      if (!closing) {\n        return 0;\n      }\n\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var pointerEvents = enabled ? 'box-none' : 'none';\n\n      _this.setState({\n        pointerEvents: pointerEvents\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n          layout = _this$props2.layout,\n          onClose = _this$props2.onClose,\n          onGestureBegin = _this$props2.onGestureBegin,\n          onGestureCanceled = _this$props2.onGestureCanceled,\n          onGestureEnd = _this$props2.onGestureEnd,\n          gestureDirection = _this$props2.gestureDirection,\n          gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n\n          _this.handleStartInteraction();\n\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            _this.handleEndInteraction();\n\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            var distance;\n            var translation;\n\n            var _velocity;\n\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n\n                _this.forceUpdate();\n              }, 32);\n            }\n\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInterpolatedStyle\", memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"getCardAnimation\", memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          layout = _this$props3.layout,\n          gestureDirection = _this$props3.gestureDirection,\n          closing = _this$props3.closing;\n      var width = layout.width,\n          height = layout.height;\n\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n\n      var toValue = this.getAnimateToValue(this.props);\n\n      if (closing !== prevProps.closing && (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue)) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n          layout = _this$props4.layout,\n          gestureDirection = _this$props4.gestureDirection,\n          gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          styleInterpolator = _this$props5.styleInterpolator,\n          interpolationIndex = _this$props5.interpolationIndex,\n          current = _this$props5.current,\n          gesture = _this$props5.gesture,\n          next = _this$props5.next,\n          layout = _this$props5.layout,\n          insets = _this$props5.insets,\n          overlay = _this$props5.overlay,\n          overlayEnabled = _this$props5.overlayEnabled,\n          shadowEnabled = _this$props5.shadowEnabled,\n          gestureEnabled = _this$props5.gestureEnabled,\n          gestureDirection = _this$props5.gestureDirection,\n          pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n          headerDarkContent = _this$props5.headerDarkContent,\n          children = _this$props5.children,\n          customContainerStyle = _this$props5.containerStyle,\n          contentStyle = _this$props5.contentStyle,\n          rest = _objectWithoutProperties(_this$props5, _excluded);\n\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n          cardStyle = interpolatedStyle.cardStyle,\n          overlayStyle = interpolatedStyle.overlayStyle,\n          shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n          backgroundColor = _StyleSheet$flatten.backgroundColor;\n\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        pointerEvents: this.state.pointerEvents,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport { Card as default };\n\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\n\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","_defineProperty","pointerEvents","Animated","Value","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","enabled","setState","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","current","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","stopAnimation","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","Provider","value","getIsModalPresentation","dark","View","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","Component","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  pointerEvents: ViewProps['pointerEvents'];\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props, State> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  state: State = {\n    pointerEvents: 'auto',\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      closing !== prevProps.closing &&\n      (this.getAnimateToValue(prevProps) !== toValue ||\n        this.lastToValue !== toValue)\n    ) {\n      // We need to trigger the animation when route was closed\n      // The route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.setState({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  pointerEvents={this.state.pointerEvents}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}